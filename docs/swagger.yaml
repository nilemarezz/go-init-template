definitions:
  author.Author:
    description: Struct to represent an author
    properties:
      id:
        type: integer
      name:
        example: test_author
        type: string
    type: object
  httputil.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Golang Testing Project
  version: "1.0"
paths:
  /authors:
    get:
      description: Retrieve a list of all authors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/author.Author'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get all authors
    post:
      consumes:
      - application/json
      description: Create a new author with the provided data
      parameters:
      - description: Author object
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/author.Author'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Create a new author
    put:
      consumes:
      - application/json
      description: Update an existing author with the provided data
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      - description: Author object
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/author.Author'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Author not found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Update an existing author
  /authors/{id}:
    get:
      description: Retrieve an author by its ID
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/author.Author'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Author not found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get an author by ID
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
